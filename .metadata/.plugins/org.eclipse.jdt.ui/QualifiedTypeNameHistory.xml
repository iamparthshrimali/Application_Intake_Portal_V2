<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="jakarta.persistence.Entity"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Id"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Lob"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Column"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.MongoRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="com.upload.pdfUplaod.repo.StorageRepositery"/>
    <fullyQualifiedTypeName name="com.upload.pdfUplaod.model.ImageData"/>
    <fullyQualifiedTypeName name="com.upload.pdfUplaod.utils.ImageUtils"/>
    <fullyQualifiedTypeName name="java.util.zip.Deflater"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.core.util.ByteArrayBuilder"/>
    <fullyQualifiedTypeName name="org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream"/>
    <fullyQualifiedTypeName name="java.util.zip.Inflater"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.Transient"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Transient"/>
    <fullyQualifiedTypeName name="jakarta.websocket.Decoder.Binary"/>
    <fullyQualifiedTypeName name="org.springframework.web.multipart.MultipartFile"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="org.bson.types.Binary"/>
    <fullyQualifiedTypeName name="org.bson.BsonBinarySubType"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.query.BasicQuery"/>
    <fullyQualifiedTypeName name="java.io.File"/>
    <fullyQualifiedTypeName name="java.util.Base64"/>
    <fullyQualifiedTypeName name="java.lang.Byte"/>
    <fullyQualifiedTypeName name="java.io.FileOutputStream"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="java.io.DataOutputStream"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="ch.qos.logback.core.model.Model"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.core.io.InputStreamResource"/>
    <fullyQualifiedTypeName name="jakarta.servlet.http.HttpServletResponse"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.MongoTemplate"/>
    <fullyQualifiedTypeName name="java.io.InputStream"/>
    <fullyQualifiedTypeName name="java.io.ByteArrayInputStream"/>
    <fullyQualifiedTypeName name="java.net.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="java.awt.PageAttributes.MediaType"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="com.example.backend.model.UserModel"/>
</qualifiedTypeNameHistroy>
